"""
Django settings for lms_project project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-^5u4iw9mplct13!(4dh5y+42(2gk1xw5x3ab80sgn_i^!9s1im')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'loan_management',
    'rest_framework',
    'drf_yasg',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lms_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lms_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('DB_ENGINE', 'django.db.backends.mysql'),
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Scoring Engine settings
# Check if we're in development mode
# Set DJANGO_ENV=development in your local environment
# In production, this will default to 'production'
ENVIRONMENT = os.environ.get('DJANGO_ENV', 'production')
IS_DEVELOPMENT = ENVIRONMENT == 'development'

# Use local services in development, external in production
USE_LOCAL_SCORING = IS_DEVELOPMENT
USE_LOCAL_CBS = IS_DEVELOPMENT

# Configure URLs based on environment
SCORING_ENGINE_BASE_URL = 'http://localhost:8000' if USE_LOCAL_SCORING else os.environ.get('SCORING_ENGINE_BASE_URL', 'https://scoringtest.credable.io')
MAX_SCORING_RETRIES = int(os.environ.get('MAX_SCORING_RETRIES', 3))
SCORING_RETRY_DELAY = int(os.environ.get('SCORING_RETRY_DELAY', 300))  # 5 minutes in seconds

# CBS Settings
CBS_KYC_WSDL_URL = os.environ.get('CBS_KYC_WSDL_URL', 'https://kycapitest.credable.io/service/customerWsdl.wsdl')
CBS_TRANSACTION_WSDL_URL = os.environ.get('CBS_TRANSACTION_WSDL_URL', 'https://trxapitest.credable.io/service/transactionWsdl.wsdl')
CBS_USERNAME = os.environ.get('CBS_USERNAME', 'admin')
CBS_PASSWORD = os.environ.get('CBS_PASSWORD', 'pwd123')

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        }
    },
    'TAGS_SORTER': 'alpha',
    'USE_SESSION_AUTH': False,
    'JSON_EDITOR': True,
    'OPERATIONS_SORTER': 'alpha',
    'SUPPORTED_SUBMIT_METHODS': ['get', 'post'],
    'TAGS': [
        {'name': '1. Client Registration', 'description': 'Initial setup endpoints'},
        {'name': '2. Customer Subscription', 'description': 'Customer onboarding'},
        {'name': '3. Scoring', 'description': 'Credit scoring process'},
        {'name': '4. Loan Management', 'description': 'Loan application and status'},
        {'name': '5. Transactions', 'description': 'Transaction data retrieval'},
    ]
} 